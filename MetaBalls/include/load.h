
#ifndef _LOAD_H_
#define _LOAD_H_

#include <Windows.h>
#include <gl/GL.h>
#include <gl/glext.h>

typedef struct {
	PFNGLGENVERTEXARRAYSPROC GenVertexArrays;
	PFNGLBINDVERTEXARRAYPROC BindVertexArray;
	PFNGLGENBUFFERSPROC GenBuffers;
	PFNGLBINDBUFFERPROC BindBuffer;
	PFNGLBUFFERDATAPROC BufferData;
	PFNGLENABLEVERTEXATTRIBARRAYPROC EnableVertexAttribArray;
	PFNGLVERTEXATTRIBPOINTERPROC VertexAttribPointer;
	PFNGLDISABLEVERTEXATTRIBARRAYPROC DisableVertexAttribArray;

	PFNGLCREATESHADERPROC CreateShader;
	PFNGLSHADERSOURCEPROC ShaderSource;
	PFNGLCOMPILESHADERPROC CompileShader;
	PFNGLGETSHADERIVPROC GetShaderiv;
	PFNGLGETSHADERINFOLOGPROC GetShaderInfoLog;
	PFNGLCREATEPROGRAMPROC CreateProgram;
	PFNGLATTACHSHADERPROC AttachShader;
	PFNGLLINKPROGRAMPROC LinkProgram;
	PFNGLGETPROGRAMIVPROC GetProgramiv;
	PFNGLGETPROGRAMINFOLOGPROC GetProgramInfoLog;
	PFNGLDETACHSHADERPROC DetachShader;
	PFNGLDELETESHADERPROC DeleteShader;
	PFNGLUSEPROGRAMPROC UseProgram;

	PFNGLGETUNIFORMLOCATIONPROC GetUniformLocation;
	PFNGLUNIFORMMATRIX4FVPROC UniformMatrix4fv;
	PFNGLUNIFORM3FVPROC Uniform3fv;
	PFNGLUNIFORM3FPROC Uniform3f;
	PFNGLUNIFORM2FPROC Uniform2f;
	PFNGLUNIFORM2FVPROC Uniform2fv;
	PFNGLUNIFORM1FPROC Uniform1f;
	PFNGLUNIFORM1IPROC Uniform1i;
	PFNGLPOINTPARAMETERIPROC PointParameteri;
}GLExtFunctions, *PGLExtFunctions;

void LoadGLExtFunctions(PGLExtFunctions);

#endif